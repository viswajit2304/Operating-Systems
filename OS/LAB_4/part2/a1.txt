When this program is run an array of size 400 is created and pointer to it's base adress is given to data.

When we set data[100] to "0" it writes at some arbitary location out of bounds of the array and hence we get a invalid write in the valgrind output.
When run with valgrind we get warning saying invalid write which is because of writing in data[100]
and an Error for leak 

This program is incorrect

==4925== Memcheck, a memory error detector
==4925== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4925== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==4925== Command: ./q1
==4925==
==4925== Invalid write of size 4
==4925==    at 0x10916D: main (in /mnt/c/Users/svv23/OneDrive/Desktop/lab4/Q2/Q2/q1)
==4925==  Address 0x4a8e1d0 is 0 bytes after a block of size 400 alloc'd
==4925==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==4925==    by 0x10915E: main (in /mnt/c/Users/svv23/OneDrive/Desktop/lab4/Q2/Q2/q1)
==4925==
==4925== 
==4925== HEAP SUMMARY:
==4925==     in use at exit: 400 bytes in 1 blocks
==4925==   total heap usage: 1 allocs, 0 frees, 400 bytes allocated
==4925==
==4925== LEAK SUMMARY:
==4925==    definitely lost: 400 bytes in 1 blocks
==4925==    indirectly lost: 0 bytes in 0 blocks
==4925==      possibly lost: 0 bytes in 0 blocks
==4925==    still reachable: 0 bytes in 0 blocks
==4925==         suppressed: 0 bytes in 0 blocks
==4925== Rerun with --leak-check=full to see details of leaked memory
==4925==
==4925== For lists of detected and suppressed errors, rerun with: -s
==4925== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)